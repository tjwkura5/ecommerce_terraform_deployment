#!/bin/bash

# Delete Variable
BACKEND_PRIVATE_IP="172.31.40.210"

# Update and upgrade system packages
sudo apt update && sudo apt upgrade -y

#Add public key to authorized keys files 
echo "${public_key}" >> ~/.ssh/authorized_keys 

#*************Installing Node Exporter*****************************

# Update the package list
sudo apt-get update -y

# Install necessary packages
sudo apt-get install -y wget

# Download Node Exporter
wget https://github.com/prometheus/node_exporter/releases/download/v1.6.0/node_exporter-1.6.0.linux-amd64.tar.gz

# Extract the downloaded tarball
tar xvfz node_exporter-1.6.0.linux-amd64.tar.gz

# Move the Node Exporter binary to a directory in your PATH
sudo mv node_exporter-1.6.0.linux-amd64/node_exporter /usr/local/bin/

# Clean up
rm -rf node_exporter-1.6.0.linux-amd64*

# Create a service file for Node Exporter
cat <<EOL | sudo tee /etc/systemd/system/node_exporter.service
[Unit]
Description=Node Exporter

[Service]
User=ubuntu
ExecStart=/usr/local/bin/node_exporter

[Install]
WantedBy=multi-user.target
EOL

# Start and enable Node Exporter
sudo systemctl daemon-reload
sudo systemctl start node_exporter
sudo systemctl enable node_exporter

# Install Git for version control
sudo apt install git -y

# git clone succeeds (returns an exit code of 0), the part after || is skipped.
# git clone fails (returns a non-zero exit code), the block { echo "Git clone failed!"; exit 1; } is executed.
# The Or echo git clone failed exit 1 was a suggestion from chat gpt and has been used throughout
git clone "https://github.com/tjwkura5/ecommerce_terraform_deployment.git" || { echo "Git clone failed!"; exit 1; }

# Extract the name of the repository from the URL and move into the repository directory
# The basename command extracts the last part of a file path or URL.
# The -s option allows you to strip a suffix in this case .git ( got this from chatgpt I already knew about basename)
cd "ecommerce_terraform_deployment/frontend" || { echo "Failed to enter repo directory!"; exit 1; }

# Download and execute Node.js LTS setup script
curl -fsSL https://deb.nodesource.com/setup_lts.x | sudo -E bash -

# Install Node.js package
sudo apt install -y nodejs

# Replace with private IP
sed -i "s|http://private_ec2_ip:8000|http://${BACKEND_PRIVATE_IP}:8000|" package.json

# Install app dependencies
npm i

# Set Node.js options to allow legacy OpenSSL provider
export NODE_OPTIONS=--openssl-legacy-provider

# Start the Node.js application
npm start

